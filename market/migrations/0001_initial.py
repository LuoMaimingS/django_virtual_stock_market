# Generated by Django 2.2.2 on 2019-07-04 14:07

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import market.models.sim_market
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('cash', models.FloatField(default=100000)),
                ('frozen_cash', models.FloatField(default=0)),
                ('flexible_cash', models.FloatField(default=100000)),
                ('profit', models.FloatField(default=0)),
                ('date_reg', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('a', 'Activate'), ('f', 'forbidden'), ('i', 'Inactivate')], default='a', max_length=1)),
                ('strategy', models.CharField(choices=[('n', 'No strategy')], default='n', max_length=1)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CommissionElem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(editable=False)),
                ('date_committed', models.DateTimeField()),
                ('stock_symbol', models.CharField(max_length=12)),
                ('stock_name', models.CharField(max_length=20)),
                ('operation', models.CharField(choices=[('b', '买入'), ('a', '卖出')], default='b', max_length=1)),
                ('price_committed', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='委托价格')),
                ('vol_committed', models.IntegerField(verbose_name='委托数量')),
                ('price_traded', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='成交均价')),
                ('vol_traded', models.IntegerField(default=0, verbose_name='成交数量')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.BaseClient')),
            ],
            options={
                'ordering': ['owner', '-date_committed'],
            },
        ),
        migrations.CreateModel(
            name='OrderBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['stock'],
            },
        ),
        migrations.CreateModel(
            name='SimCommissionElem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(editable=False)),
                ('date_committed', models.DateTimeField()),
                ('stock_symbol', models.CharField(max_length=12)),
                ('stock_name', models.CharField(max_length=20)),
                ('operation', models.CharField(choices=[('b', '买入'), ('a', '卖出')], default='b', max_length=1)),
                ('price_committed', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='委托价格')),
                ('vol_committed', models.IntegerField(verbose_name='委托数量')),
                ('price_traded', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='成交均价')),
                ('vol_traded', models.IntegerField(default=0, verbose_name='成交数量')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.BaseClient')),
            ],
            options={
                'ordering': ['owner', '-date_committed'],
            },
        ),
        migrations.CreateModel(
            name='SimMarket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=datetime.datetime(2018, 1, 2, 9, 40))),
                ('tick', models.IntegerField(default=0)),
                ('num_v_clients', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SimOrderBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['stock'],
            },
        ),
        migrations.CreateModel(
            name='SimStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=12)),
                ('name', models.CharField(max_length=20)),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='last price of the stock', max_digits=5, null=True, verbose_name='最新价')),
                ('low', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='lowest price of the stock till now today', max_digits=5, null=True, verbose_name='最低价')),
                ('high', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='highest price of the stock till now today', max_digits=5, null=True, verbose_name='最高价')),
                ('limit_up', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='limit up of the stock today', max_digits=5, null=True, verbose_name='涨停价')),
                ('limit_down', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='limit down of the stock today', max_digits=5, null=True, verbose_name='跌停价')),
                ('volume', models.IntegerField(blank=True, default=0, help_text='Total traded volume of this stock today', null=True, verbose_name='交易量')),
                ('amount', models.FloatField(blank=True, default=0, help_text='Total traded amount of this stock today', null=True, verbose_name='交易额')),
                ('simulating', models.BooleanField(default=False)),
                ('datetime', models.DateTimeField(blank=True, default=None)),
            ],
            options={
                'ordering': ['symbol', '-datetime'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=12)),
                ('name', models.CharField(max_length=20)),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='last price of the stock', max_digits=5, null=True, verbose_name='最新价')),
                ('low', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='lowest price of the stock till now today', max_digits=5, null=True, verbose_name='最低价')),
                ('high', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='highest price of the stock till now today', max_digits=5, null=True, verbose_name='最高价')),
                ('limit_up', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='limit up of the stock today', max_digits=5, null=True, verbose_name='涨停价')),
                ('limit_down', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='limit down of the stock today', max_digits=5, null=True, verbose_name='跌停价')),
                ('volume', models.IntegerField(blank=True, default=0, help_text='Total traded volume of this stock today', null=True, verbose_name='交易量')),
                ('amount', models.FloatField(blank=True, default=0, help_text='Total traded amount of this stock today', null=True, verbose_name='交易额')),
            ],
            options={
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='TransactionElem',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock_symbol', models.CharField(max_length=12)),
                ('stock_name', models.CharField(max_length=20)),
                ('operation', models.CharField(choices=[('a', 'ASK'), ('b', 'BID'), ('c', 'CANCEL')], default='b', help_text='operation', max_length=1)),
                ('price_traded', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='成交价格')),
                ('vol_traded', models.IntegerField(default=0, verbose_name='成交数量')),
                ('date_traded', models.DateTimeField()),
                ('counterpart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counterpart', to='market.BaseClient')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='self_side', to='market.BaseClient')),
                ('stock_corr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Stock')),
            ],
            options={
                'ordering': ['owner', '-date_traded'],
            },
        ),
        migrations.CreateModel(
            name='TradeMsg',
            fields=[
                ('stock_symbol', models.CharField(max_length=12)),
                ('trade_direction', models.CharField(max_length=1)),
                ('trade_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('trade_vol', models.IntegerField()),
                ('trade_date', models.DateTimeField(auto_now_add=True)),
                ('commission_id', models.UUIDField(default=uuid.uuid4)),
                ('trade_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tax_charged', models.FloatField(default=0)),
                ('counterpart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acceptor', to='market.BaseClient')),
                ('initiator_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiator', to='market.BaseClient')),
            ],
        ),
        migrations.CreateModel(
            name='TradeHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(choices=[('a', 'ASK'), ('b', 'BID')], max_length=1, verbose_name='交易方向')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='价格')),
                ('vol', models.IntegerField()),
                ('datetime', models.DateTimeField()),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Stock')),
            ],
            options={
                'ordering': ['stock'],
            },
        ),
        migrations.CreateModel(
            name='SimTransactionElem',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock_symbol', models.CharField(max_length=12)),
                ('stock_name', models.CharField(max_length=20)),
                ('operation', models.CharField(choices=[('a', 'ASK'), ('b', 'BID'), ('c', 'CANCEL')], default='b', help_text='operation', max_length=1)),
                ('price_traded', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='成交价格')),
                ('vol_traded', models.IntegerField(default=0, verbose_name='成交数量')),
                ('date_traded', models.DateTimeField()),
                ('counterpart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sim_counterpart', to='market.BaseClient')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sim_self_side', to='market.BaseClient')),
                ('stock_corr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.SimStock')),
            ],
            options={
                'ordering': ['owner', '-date_traded'],
            },
        ),
        migrations.CreateModel(
            name='SimTradeMsg',
            fields=[
                ('stock_symbol', models.CharField(max_length=12)),
                ('trade_direction', models.CharField(max_length=1)),
                ('trade_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('trade_vol', models.IntegerField()),
                ('trade_date', models.DateTimeField()),
                ('trade_tick', models.IntegerField()),
                ('commission_id', models.UUIDField(default=uuid.uuid4)),
                ('trade_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tax_charged', models.FloatField(default=0)),
                ('counterpart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sim_acceptor', to='market.BaseClient')),
                ('initiator_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sim_initiator', to='market.BaseClient')),
            ],
        ),
        migrations.CreateModel(
            name='SimTradeHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(choices=[('a', 'ASK'), ('b', 'BID')], max_length=1, verbose_name='交易方向')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='价格')),
                ('vol', models.IntegerField()),
                ('datetime', models.DateTimeField()),
                ('tick', models.IntegerField()),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.SimStock')),
            ],
            options={
                'ordering': ['stock'],
            },
        ),
        migrations.CreateModel(
            name='SimOrderBookEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_direction', models.CharField(default='b', max_length=1)),
                ('entry_price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='价格')),
                ('total_vol', models.IntegerField(default=0)),
                ('order_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.SimOrderBook')),
            ],
            options={
                'ordering': ['order_book', 'entry_direction', 'entry_price'],
            },
        ),
        migrations.CreateModel(
            name='SimOrderBookElem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4)),
                ('date_committed', models.DateTimeField()),
                ('direction_committed', models.CharField(choices=[('a', 'ASK'), ('b', 'BID')], max_length=1, verbose_name='方向')),
                ('price_committed', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='价格')),
                ('vol_committed', models.IntegerField(verbose_name='数量')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.BaseClient')),
                ('order_book_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.SimOrderBookEntry')),
            ],
            options={
                'ordering': ['order_book_entry', 'date_committed'],
            },
        ),
        migrations.AddField(
            model_name='simorderbook',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.SimStock'),
        ),
        migrations.CreateModel(
            name='SimHoldingElem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_symbol', models.CharField(max_length=12)),
                ('stock_name', models.CharField(max_length=20)),
                ('vol', models.IntegerField(default=0, verbose_name='股票总数量')),
                ('frozen_vol', models.IntegerField(default=0, verbose_name='冻结数量')),
                ('available_vol', models.IntegerField(default=0, verbose_name='可用数量')),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='成本价')),
                ('price_guaranteed', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='保本价')),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='last price of the stock', max_digits=5, null=True, verbose_name='最新价')),
                ('profit', models.FloatField(default=0, verbose_name='盈亏')),
                ('value', models.FloatField(default=0, verbose_name='市值')),
                ('date_bought', models.DateTimeField(blank=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.BaseClient')),
                ('stock_corr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.SimStock')),
            ],
            options={
                'ordering': ['owner', '-date_bought'],
            },
        ),
        migrations.CreateModel(
            name='SimCommissionMsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_symbol', models.CharField(max_length=12)),
                ('commit_direction', models.CharField(default='b', max_length=1)),
                ('commit_price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('commit_vol', models.IntegerField(default=0)),
                ('commit_date', models.DateTimeField(blank=True, default=None)),
                ('confirmed', models.BooleanField(default=False)),
                ('cancel_cms', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.SimCommissionElem')),
                ('commit_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sim_principle', to='market.BaseClient')),
            ],
        ),
        migrations.AddField(
            model_name='simcommissionelem',
            name='stock_corr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.SimStock'),
        ),
        migrations.CreateModel(
            name='OrderBookEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_direction', models.CharField(default='b', max_length=1)),
                ('entry_price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='价格')),
                ('total_vol', models.IntegerField(default=0)),
                ('order_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.OrderBook')),
            ],
            options={
                'ordering': ['order_book', 'entry_direction', 'entry_price'],
            },
        ),
        migrations.CreateModel(
            name='OrderBookElem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4)),
                ('date_committed', models.DateTimeField(auto_now_add=True)),
                ('direction_committed', models.CharField(choices=[('a', 'ASK'), ('b', 'BID')], max_length=1, verbose_name='方向')),
                ('price_committed', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='价格')),
                ('vol_committed', models.IntegerField(verbose_name='数量')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.BaseClient')),
                ('order_book_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.OrderBookEntry')),
            ],
            options={
                'ordering': ['order_book_entry', 'date_committed'],
            },
        ),
        migrations.AddField(
            model_name='orderbook',
            name='stock',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Stock'),
        ),
        migrations.CreateModel(
            name='HoldingElem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_symbol', models.CharField(max_length=12)),
                ('stock_name', models.CharField(max_length=20)),
                ('vol', models.IntegerField(default=0, verbose_name='股票总数量')),
                ('frozen_vol', models.IntegerField(default=0, verbose_name='冻结数量')),
                ('available_vol', models.IntegerField(default=0, verbose_name='可用数量')),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='成本价')),
                ('price_guaranteed', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='保本价')),
                ('last_price', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='last price of the stock', max_digits=5, null=True, verbose_name='最新价')),
                ('profit', models.FloatField(default=0, verbose_name='盈亏')),
                ('value', models.FloatField(default=0, verbose_name='市值')),
                ('date_bought', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.BaseClient')),
                ('stock_corr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Stock')),
            ],
            options={
                'ordering': ['owner', '-date_bought'],
            },
        ),
        migrations.CreateModel(
            name='FocusElem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_symbol', models.CharField(max_length=12)),
                ('stock_name', models.CharField(max_length=20)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.BaseClient')),
                ('stock_corr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Stock')),
            ],
            options={
                'ordering': ['owner'],
            },
        ),
        migrations.CreateModel(
            name='CommissionMsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_symbol', models.CharField(max_length=12)),
                ('commit_direction', models.CharField(default='b', max_length=1)),
                ('commit_price', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('commit_vol', models.IntegerField(default=0)),
                ('commit_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('cancel_cms', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.CommissionElem')),
                ('commit_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='principle', to='market.BaseClient')),
            ],
        ),
        migrations.AddField(
            model_name='commissionelem',
            name='stock_corr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Stock'),
        ),
        migrations.CreateModel(
            name='AddClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=market.models.sim_market.generate_ordered_client_name, max_length=20)),
                ('cash', models.FloatField(default=100000)),
                ('strategy', models.CharField(choices=[('n', 'No strategy')], default='n', max_length=1)),
                ('vol', models.IntegerField(default=0, verbose_name='股票总数量')),
                ('stock_corr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.SimStock')),
            ],
        ),
    ]
